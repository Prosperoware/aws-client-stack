---
AWSTemplateFormatVersion: '2010-09-09'
Description: IAM Roles Stack
Parameters:
  Domain:
    Description: Domain name
    Type: String
  DbMasterUsername:
    Description: User name of the master user
    Type: String
  DbMasterPassword:
    Description: Password for the master user
    Type: String
    NoEcho: true
  Encryption:
    Type: String
  VPC:
    Type: String
  PrivateSubnetOne:
    Type: String
  PrivateSubnetTwo:
    Type: String
  RDSSecurityGroupId:
    Type: String
  LambdaSecurityGroup:
    Type: String
  CodeBuildRole:
    Type: String
Conditions:
  HasDefaultEncryption: !Equals [!Ref Encryption, 'Default']
  HasKMSEncryption: !Equals [!Ref Encryption, 'KMS']
Resources:
  ContentSyncJobProcessQueue:
    Type: AWS::SQS::Queue
    Properties: 
      DelaySeconds: 0
      MaximumMessageSize: 262144 
      MessageRetentionPeriod: 1209600
      QueueName: contentsync-prod-job-process-v1
      ReceiveMessageWaitTimeSeconds: 0
      VisibilityTimeout: 960
      Tags: 
        - Key: Project
          Value: Prosperoware Content Sync
  ContentSyncETLProcessQueue:
    Type: AWS::SQS::Queue
    Properties: 
      DelaySeconds: 0
      MaximumMessageSize: 262144 
      MessageRetentionPeriod: 1209600
      QueueName: contentsync-prod-etl-process-v1
      ReceiveMessageWaitTimeSeconds: 0
      VisibilityTimeout: 960
      Tags: 
        - Key: Project
          Value: Prosperoware Content Sync
  ConfigurationBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: !Sub
        - content-sync-configuration-${Domain}
        - {Domain: !Ref Domain}
      Tags: 
        - Key: Project
          Value: Prosperoware Content Sync
  S3DefaultEncryption:
    Type: AWS::S3::Bucket
    Condition: HasDefaultEncryption
    Properties:
        BucketName: !Sub 
          - ${Domain}-prosperoware-io-encrypted-bucket
          - {Domain: !Ref Domain}
        BucketEncryption:
          ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
        Tags: 
          - Key: Project
            Value: Prosperoware Content Sync
  S3KMSEncryption:
    Type: AWS::S3::Bucket
    Condition: HasKMSEncryption
    Properties:
        BucketName: !Sub 
          - ${Domain}-prosperoware-io-encrypted-bucket
          - {Domain: !Ref Domain}
        BucketEncryption:
          ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID: !Sub 'arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/s3'
              SSEAlgorithm: 'aws:kms'
        Tags: 
          - Key: Project
            Value: Prosperoware Content Sync       
  DBSubnetGroup:
    Type: "AWS::RDS::DBSubnetGroup"
    Properties: 
      DBSubnetGroupDescription: Subnet group for the security vpc
      SubnetIds:
        - !Ref PrivateSubnetOne
        - !Ref PrivateSubnetTwo
  RDSCluster:
    Type: AWS::RDS::DBCluster
    Properties:
      DatabaseName: contentsync_prod
      DBClusterIdentifier: !Sub 
        - ${Domain}-cluster
        - {Domain: !Ref Domain}
      MasterUsername:
        !Ref DbMasterUsername
      MasterUserPassword:
        !Ref DbMasterPassword
      Engine: aurora-mysql
      EngineVersion: '5.7.mysql_aurora.2.09.1'
      DBSubnetGroupName:
        !Ref DBSubnetGroup
      DBClusterParameterGroupName:
        !Ref RDSDBClusterParameterGroup
      VpcSecurityGroupIds:
        - !Ref RDSSecurityGroupId
      BackupRetentionPeriod: 35
      DeletionProtection: true
      StorageEncrypted: true
    DeletionPolicy: "Snapshot"
  RDSDBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier:
        !Ref Domain
      DBSubnetGroupName:
        !Ref DBSubnetGroup
      DBParameterGroupName:
        !Ref RDSDBParameterGroup
      Engine: aurora-mysql
      DBClusterIdentifier:
        !Ref RDSCluster
      PubliclyAccessible: 'false'
      DBInstanceClass: db.t2.small
  RDSDBClusterParameterGroup:
    Type: AWS::RDS::DBClusterParameterGroup
    Properties:
      Description: Aurora Cluster Parameter Group
      Family: aurora-mysql5.7
      Parameters:
        time_zone: US/Eastern
        innodb_flush_log_at_trx_commit: 0
        max_allowed_packet: 8388608
        wait_timeout: 7200
        server_audit_logging: 1
  RDSDBParameterGroup:
    Type: AWS::RDS::DBParameterGroup
    Properties:
      Description: Aurora Parameter Group
      Family: aurora-mysql5.7
      Parameters:
        sql_mode: IGNORE_SPACE
        key_buffer_size: 2147483648
        thread_cache_size: 100
        bulk_insert_buffer_size: 16777216
        general_log: 1
        slow_query_log: 1
        aurora_parallel_query: 'ON'
        event_scheduler: 'ON'
  ContentSyncCodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub 
        - ${Domain}-content_sync_project
        - {Domain: !Ref Domain}
      Description: CodeBuild project for Content Sync & ETL.
      ServiceRole: !Ref CodeBuildRole
      Source:
        Type: S3
        Location: !Sub 
          - content-sync-configuration-${Domain}/serverless/
          - {Domain: !Ref Domain}
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: 'aws/codebuild/standard:4.0'
        EnvironmentVariables:
          - Name: CONFIGBUCKET
            Type: PLAINTEXT
            Value: !Sub 
              - content-sync-configuration-${Domain}
              - {Domain: !Ref Domain}
      Artifacts:
        Type: no_artifacts
      VpcConfig:
        SecurityGroupIds: 
          - !Ref LambdaSecurityGroup
        Subnets:
          - !Ref PrivateSubnetOne
          - !Ref PrivateSubnetTwo
        VpcId: !Ref VPC
  DBUpdateCodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub 
        - ${Domain}-dbupdate
        - {Domain: !Ref Domain}
      Description: CodeBuild project for updating Database Schema.
      ServiceRole: !Ref CodeBuildRole
      Source:
        Type: S3
        Location: !Sub 
          - content-sync-configuration-${Domain}/liquibase/
          - {Domain: !Ref Domain}
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: 'aws/codebuild/standard:4.0'
        EnvironmentVariables:
          - Name: db_user
            Type: PLAINTEXT
            Value: xx
          - Name: db_password
            Type: PLAINTEXT
            Value: xx
      Artifacts:
        Type: no_artifacts
      VpcConfig:
        SecurityGroupIds: 
          - !Ref LambdaSecurityGroup
        Subnets:
          - !Ref PrivateSubnetOne
          - !Ref PrivateSubnetTwo
        VpcId: !Ref VPC